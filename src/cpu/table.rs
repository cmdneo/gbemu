//! Contains decoded instruction indexed by opcodes.
//! This provides us with constant time decoding given how
//! non-uniformly operands are encoded in different instructions and
//! have different number of cycles.
//! This does not require any complex logic to decode and is simple to understand.

use crate::cpu::isa::{Cond, Instr, Opcode, Operand, Reg};

macro_rules! ins {
    ($bcy:literal, $cy:literal, $op:expr) => {
        Instr {
            op: $op,
            op1: Operand::Absent,
            op2: Operand::Absent,
            mcycles: $cy,
            branch_mcycles: $bcy,
        }
    };
    ($bcy:literal, $cy:literal, $op:expr, $op1:expr) => {
        Instr {
            op: $op,
            op1: $op1,
            op2: Operand::Absent,
            mcycles: $cy,
            branch_mcycles: $bcy,
        }
    };
    ($bcy:literal, $cy:literal, $op:expr, $op1:expr, $op2:expr) => {
        Instr {
            op: $op,
            op1: $op1,
            op2: $op2,
            mcycles: $cy,
            branch_mcycles: $bcy,
        }
    };
}

use Opcode::*;
type Op = Operand;

// Generated by: gen/gen_table.py
pub(crate) const INSTR_TABLE: [Instr; 256] = {
    let mut a = [ins!(0, 0, Illegal); 256];
    a[0x00] = ins!(1, 1, Nop);
    a[0x01] = ins!(3, 3, Ld, Op::Reg(Reg::BC), Op::U16(0));
    a[0x02] = ins!(2, 2, Ld, Op::RegMem(Reg::BC), Op::Reg(Reg::A));
    a[0x03] = ins!(2, 2, Inc, Op::Reg(Reg::BC));
    a[0x04] = ins!(1, 1, Inc, Op::Reg(Reg::B));
    a[0x05] = ins!(1, 1, Dec, Op::Reg(Reg::B));
    a[0x06] = ins!(2, 2, Ld, Op::Reg(Reg::B), Op::U8(0));
    a[0x07] = ins!(1, 1, Rlca);
    a[0x08] = ins!(5, 5, Ld, Op::A16(0), Op::Reg(Reg::SP));
    a[0x09] = ins!(2, 2, Add, Op::Reg(Reg::HL), Op::Reg(Reg::BC));
    a[0x0A] = ins!(2, 2, Ld, Op::Reg(Reg::A), Op::RegMem(Reg::BC));
    a[0x0B] = ins!(2, 2, Dec, Op::Reg(Reg::BC));
    a[0x0C] = ins!(1, 1, Inc, Op::Reg(Reg::C));
    a[0x0D] = ins!(1, 1, Dec, Op::Reg(Reg::C));
    a[0x0E] = ins!(2, 2, Ld, Op::Reg(Reg::C), Op::U8(0));
    a[0x0F] = ins!(1, 1, Rrca);
    a[0x10] = ins!(1, 1, Stop, Op::U8(0));
    a[0x11] = ins!(3, 3, Ld, Op::Reg(Reg::DE), Op::U16(0));
    a[0x12] = ins!(2, 2, Ld, Op::RegMem(Reg::DE), Op::Reg(Reg::A));
    a[0x13] = ins!(2, 2, Inc, Op::Reg(Reg::DE));
    a[0x14] = ins!(1, 1, Inc, Op::Reg(Reg::D));
    a[0x15] = ins!(1, 1, Dec, Op::Reg(Reg::D));
    a[0x16] = ins!(2, 2, Ld, Op::Reg(Reg::D), Op::U8(0));
    a[0x17] = ins!(1, 1, Rla);
    a[0x18] = ins!(3, 3, Jr, Op::I8(0));
    a[0x19] = ins!(2, 2, Add, Op::Reg(Reg::HL), Op::Reg(Reg::DE));
    a[0x1A] = ins!(2, 2, Ld, Op::Reg(Reg::A), Op::RegMem(Reg::DE));
    a[0x1B] = ins!(2, 2, Dec, Op::Reg(Reg::DE));
    a[0x1C] = ins!(1, 1, Inc, Op::Reg(Reg::E));
    a[0x1D] = ins!(1, 1, Dec, Op::Reg(Reg::E));
    a[0x1E] = ins!(2, 2, Ld, Op::Reg(Reg::E), Op::U8(0));
    a[0x1F] = ins!(1, 1, Rra);
    a[0x20] = ins!(3, 2, Jr, Op::Cond(Cond::NZ), Op::I8(0));
    a[0x21] = ins!(3, 3, Ld, Op::Reg(Reg::HL), Op::U16(0));
    a[0x22] = ins!(2, 2, Ld, Op::RegMem(Reg::HLinc), Op::Reg(Reg::A));
    a[0x23] = ins!(2, 2, Inc, Op::Reg(Reg::HL));
    a[0x24] = ins!(1, 1, Inc, Op::Reg(Reg::H));
    a[0x25] = ins!(1, 1, Dec, Op::Reg(Reg::H));
    a[0x26] = ins!(2, 2, Ld, Op::Reg(Reg::H), Op::U8(0));
    a[0x27] = ins!(1, 1, Daa);
    a[0x28] = ins!(3, 2, Jr, Op::Cond(Cond::Z), Op::I8(0));
    a[0x29] = ins!(2, 2, Add, Op::Reg(Reg::HL), Op::Reg(Reg::HL));
    a[0x2A] = ins!(2, 2, Ld, Op::Reg(Reg::A), Op::RegMem(Reg::HLinc));
    a[0x2B] = ins!(2, 2, Dec, Op::Reg(Reg::HL));
    a[0x2C] = ins!(1, 1, Inc, Op::Reg(Reg::L));
    a[0x2D] = ins!(1, 1, Dec, Op::Reg(Reg::L));
    a[0x2E] = ins!(2, 2, Ld, Op::Reg(Reg::L), Op::U8(0));
    a[0x2F] = ins!(1, 1, Cpl);
    a[0x30] = ins!(3, 2, Jr, Op::Cond(Cond::NC), Op::I8(0));
    a[0x31] = ins!(3, 3, Ld, Op::Reg(Reg::SP), Op::U16(0));
    a[0x32] = ins!(2, 2, Ld, Op::RegMem(Reg::HLdec), Op::Reg(Reg::A));
    a[0x33] = ins!(2, 2, Inc, Op::Reg(Reg::SP));
    a[0x34] = ins!(3, 3, Inc, Op::RegMem(Reg::HL));
    a[0x35] = ins!(3, 3, Dec, Op::RegMem(Reg::HL));
    a[0x36] = ins!(3, 3, Ld, Op::RegMem(Reg::HL), Op::U8(0));
    a[0x37] = ins!(1, 1, Scf);
    a[0x38] = ins!(3, 2, Jr, Op::Cond(Cond::C), Op::I8(0));
    a[0x39] = ins!(2, 2, Add, Op::Reg(Reg::HL), Op::Reg(Reg::SP));
    a[0x3A] = ins!(2, 2, Ld, Op::Reg(Reg::A), Op::RegMem(Reg::HLdec));
    a[0x3B] = ins!(2, 2, Dec, Op::Reg(Reg::SP));
    a[0x3C] = ins!(1, 1, Inc, Op::Reg(Reg::A));
    a[0x3D] = ins!(1, 1, Dec, Op::Reg(Reg::A));
    a[0x3E] = ins!(2, 2, Ld, Op::Reg(Reg::A), Op::U8(0));
    a[0x3F] = ins!(1, 1, Ccf);
    a[0x40] = ins!(1, 1, Ld, Op::Reg(Reg::B), Op::Reg(Reg::B));
    a[0x41] = ins!(1, 1, Ld, Op::Reg(Reg::B), Op::Reg(Reg::C));
    a[0x42] = ins!(1, 1, Ld, Op::Reg(Reg::B), Op::Reg(Reg::D));
    a[0x43] = ins!(1, 1, Ld, Op::Reg(Reg::B), Op::Reg(Reg::E));
    a[0x44] = ins!(1, 1, Ld, Op::Reg(Reg::B), Op::Reg(Reg::H));
    a[0x45] = ins!(1, 1, Ld, Op::Reg(Reg::B), Op::Reg(Reg::L));
    a[0x46] = ins!(2, 2, Ld, Op::Reg(Reg::B), Op::RegMem(Reg::HL));
    a[0x47] = ins!(1, 1, Ld, Op::Reg(Reg::B), Op::Reg(Reg::A));
    a[0x48] = ins!(1, 1, Ld, Op::Reg(Reg::C), Op::Reg(Reg::B));
    a[0x49] = ins!(1, 1, Ld, Op::Reg(Reg::C), Op::Reg(Reg::C));
    a[0x4A] = ins!(1, 1, Ld, Op::Reg(Reg::C), Op::Reg(Reg::D));
    a[0x4B] = ins!(1, 1, Ld, Op::Reg(Reg::C), Op::Reg(Reg::E));
    a[0x4C] = ins!(1, 1, Ld, Op::Reg(Reg::C), Op::Reg(Reg::H));
    a[0x4D] = ins!(1, 1, Ld, Op::Reg(Reg::C), Op::Reg(Reg::L));
    a[0x4E] = ins!(2, 2, Ld, Op::Reg(Reg::C), Op::RegMem(Reg::HL));
    a[0x4F] = ins!(1, 1, Ld, Op::Reg(Reg::C), Op::Reg(Reg::A));
    a[0x50] = ins!(1, 1, Ld, Op::Reg(Reg::D), Op::Reg(Reg::B));
    a[0x51] = ins!(1, 1, Ld, Op::Reg(Reg::D), Op::Reg(Reg::C));
    a[0x52] = ins!(1, 1, Ld, Op::Reg(Reg::D), Op::Reg(Reg::D));
    a[0x53] = ins!(1, 1, Ld, Op::Reg(Reg::D), Op::Reg(Reg::E));
    a[0x54] = ins!(1, 1, Ld, Op::Reg(Reg::D), Op::Reg(Reg::H));
    a[0x55] = ins!(1, 1, Ld, Op::Reg(Reg::D), Op::Reg(Reg::L));
    a[0x56] = ins!(2, 2, Ld, Op::Reg(Reg::D), Op::RegMem(Reg::HL));
    a[0x57] = ins!(1, 1, Ld, Op::Reg(Reg::D), Op::Reg(Reg::A));
    a[0x58] = ins!(1, 1, Ld, Op::Reg(Reg::E), Op::Reg(Reg::B));
    a[0x59] = ins!(1, 1, Ld, Op::Reg(Reg::E), Op::Reg(Reg::C));
    a[0x5A] = ins!(1, 1, Ld, Op::Reg(Reg::E), Op::Reg(Reg::D));
    a[0x5B] = ins!(1, 1, Ld, Op::Reg(Reg::E), Op::Reg(Reg::E));
    a[0x5C] = ins!(1, 1, Ld, Op::Reg(Reg::E), Op::Reg(Reg::H));
    a[0x5D] = ins!(1, 1, Ld, Op::Reg(Reg::E), Op::Reg(Reg::L));
    a[0x5E] = ins!(2, 2, Ld, Op::Reg(Reg::E), Op::RegMem(Reg::HL));
    a[0x5F] = ins!(1, 1, Ld, Op::Reg(Reg::E), Op::Reg(Reg::A));
    a[0x60] = ins!(1, 1, Ld, Op::Reg(Reg::H), Op::Reg(Reg::B));
    a[0x61] = ins!(1, 1, Ld, Op::Reg(Reg::H), Op::Reg(Reg::C));
    a[0x62] = ins!(1, 1, Ld, Op::Reg(Reg::H), Op::Reg(Reg::D));
    a[0x63] = ins!(1, 1, Ld, Op::Reg(Reg::H), Op::Reg(Reg::E));
    a[0x64] = ins!(1, 1, Ld, Op::Reg(Reg::H), Op::Reg(Reg::H));
    a[0x65] = ins!(1, 1, Ld, Op::Reg(Reg::H), Op::Reg(Reg::L));
    a[0x66] = ins!(2, 2, Ld, Op::Reg(Reg::H), Op::RegMem(Reg::HL));
    a[0x67] = ins!(1, 1, Ld, Op::Reg(Reg::H), Op::Reg(Reg::A));
    a[0x68] = ins!(1, 1, Ld, Op::Reg(Reg::L), Op::Reg(Reg::B));
    a[0x69] = ins!(1, 1, Ld, Op::Reg(Reg::L), Op::Reg(Reg::C));
    a[0x6A] = ins!(1, 1, Ld, Op::Reg(Reg::L), Op::Reg(Reg::D));
    a[0x6B] = ins!(1, 1, Ld, Op::Reg(Reg::L), Op::Reg(Reg::E));
    a[0x6C] = ins!(1, 1, Ld, Op::Reg(Reg::L), Op::Reg(Reg::H));
    a[0x6D] = ins!(1, 1, Ld, Op::Reg(Reg::L), Op::Reg(Reg::L));
    a[0x6E] = ins!(2, 2, Ld, Op::Reg(Reg::L), Op::RegMem(Reg::HL));
    a[0x6F] = ins!(1, 1, Ld, Op::Reg(Reg::L), Op::Reg(Reg::A));
    a[0x70] = ins!(2, 2, Ld, Op::RegMem(Reg::HL), Op::Reg(Reg::B));
    a[0x71] = ins!(2, 2, Ld, Op::RegMem(Reg::HL), Op::Reg(Reg::C));
    a[0x72] = ins!(2, 2, Ld, Op::RegMem(Reg::HL), Op::Reg(Reg::D));
    a[0x73] = ins!(2, 2, Ld, Op::RegMem(Reg::HL), Op::Reg(Reg::E));
    a[0x74] = ins!(2, 2, Ld, Op::RegMem(Reg::HL), Op::Reg(Reg::H));
    a[0x75] = ins!(2, 2, Ld, Op::RegMem(Reg::HL), Op::Reg(Reg::L));
    a[0x76] = ins!(1, 1, Halt);
    a[0x77] = ins!(2, 2, Ld, Op::RegMem(Reg::HL), Op::Reg(Reg::A));
    a[0x78] = ins!(1, 1, Ld, Op::Reg(Reg::A), Op::Reg(Reg::B));
    a[0x79] = ins!(1, 1, Ld, Op::Reg(Reg::A), Op::Reg(Reg::C));
    a[0x7A] = ins!(1, 1, Ld, Op::Reg(Reg::A), Op::Reg(Reg::D));
    a[0x7B] = ins!(1, 1, Ld, Op::Reg(Reg::A), Op::Reg(Reg::E));
    a[0x7C] = ins!(1, 1, Ld, Op::Reg(Reg::A), Op::Reg(Reg::H));
    a[0x7D] = ins!(1, 1, Ld, Op::Reg(Reg::A), Op::Reg(Reg::L));
    a[0x7E] = ins!(2, 2, Ld, Op::Reg(Reg::A), Op::RegMem(Reg::HL));
    a[0x7F] = ins!(1, 1, Ld, Op::Reg(Reg::A), Op::Reg(Reg::A));
    a[0x80] = ins!(1, 1, Add, Op::Reg(Reg::A), Op::Reg(Reg::B));
    a[0x81] = ins!(1, 1, Add, Op::Reg(Reg::A), Op::Reg(Reg::C));
    a[0x82] = ins!(1, 1, Add, Op::Reg(Reg::A), Op::Reg(Reg::D));
    a[0x83] = ins!(1, 1, Add, Op::Reg(Reg::A), Op::Reg(Reg::E));
    a[0x84] = ins!(1, 1, Add, Op::Reg(Reg::A), Op::Reg(Reg::H));
    a[0x85] = ins!(1, 1, Add, Op::Reg(Reg::A), Op::Reg(Reg::L));
    a[0x86] = ins!(2, 2, Add, Op::Reg(Reg::A), Op::RegMem(Reg::HL));
    a[0x87] = ins!(1, 1, Add, Op::Reg(Reg::A), Op::Reg(Reg::A));
    a[0x88] = ins!(1, 1, Adc, Op::Reg(Reg::A), Op::Reg(Reg::B));
    a[0x89] = ins!(1, 1, Adc, Op::Reg(Reg::A), Op::Reg(Reg::C));
    a[0x8A] = ins!(1, 1, Adc, Op::Reg(Reg::A), Op::Reg(Reg::D));
    a[0x8B] = ins!(1, 1, Adc, Op::Reg(Reg::A), Op::Reg(Reg::E));
    a[0x8C] = ins!(1, 1, Adc, Op::Reg(Reg::A), Op::Reg(Reg::H));
    a[0x8D] = ins!(1, 1, Adc, Op::Reg(Reg::A), Op::Reg(Reg::L));
    a[0x8E] = ins!(2, 2, Adc, Op::Reg(Reg::A), Op::RegMem(Reg::HL));
    a[0x8F] = ins!(1, 1, Adc, Op::Reg(Reg::A), Op::Reg(Reg::A));
    a[0x90] = ins!(1, 1, Sub, Op::Reg(Reg::A), Op::Reg(Reg::B));
    a[0x91] = ins!(1, 1, Sub, Op::Reg(Reg::A), Op::Reg(Reg::C));
    a[0x92] = ins!(1, 1, Sub, Op::Reg(Reg::A), Op::Reg(Reg::D));
    a[0x93] = ins!(1, 1, Sub, Op::Reg(Reg::A), Op::Reg(Reg::E));
    a[0x94] = ins!(1, 1, Sub, Op::Reg(Reg::A), Op::Reg(Reg::H));
    a[0x95] = ins!(1, 1, Sub, Op::Reg(Reg::A), Op::Reg(Reg::L));
    a[0x96] = ins!(2, 2, Sub, Op::Reg(Reg::A), Op::RegMem(Reg::HL));
    a[0x97] = ins!(1, 1, Sub, Op::Reg(Reg::A), Op::Reg(Reg::A));
    a[0x98] = ins!(1, 1, Sbc, Op::Reg(Reg::A), Op::Reg(Reg::B));
    a[0x99] = ins!(1, 1, Sbc, Op::Reg(Reg::A), Op::Reg(Reg::C));
    a[0x9A] = ins!(1, 1, Sbc, Op::Reg(Reg::A), Op::Reg(Reg::D));
    a[0x9B] = ins!(1, 1, Sbc, Op::Reg(Reg::A), Op::Reg(Reg::E));
    a[0x9C] = ins!(1, 1, Sbc, Op::Reg(Reg::A), Op::Reg(Reg::H));
    a[0x9D] = ins!(1, 1, Sbc, Op::Reg(Reg::A), Op::Reg(Reg::L));
    a[0x9E] = ins!(2, 2, Sbc, Op::Reg(Reg::A), Op::RegMem(Reg::HL));
    a[0x9F] = ins!(1, 1, Sbc, Op::Reg(Reg::A), Op::Reg(Reg::A));
    a[0xA0] = ins!(1, 1, And, Op::Reg(Reg::A), Op::Reg(Reg::B));
    a[0xA1] = ins!(1, 1, And, Op::Reg(Reg::A), Op::Reg(Reg::C));
    a[0xA2] = ins!(1, 1, And, Op::Reg(Reg::A), Op::Reg(Reg::D));
    a[0xA3] = ins!(1, 1, And, Op::Reg(Reg::A), Op::Reg(Reg::E));
    a[0xA4] = ins!(1, 1, And, Op::Reg(Reg::A), Op::Reg(Reg::H));
    a[0xA5] = ins!(1, 1, And, Op::Reg(Reg::A), Op::Reg(Reg::L));
    a[0xA6] = ins!(2, 2, And, Op::Reg(Reg::A), Op::RegMem(Reg::HL));
    a[0xA7] = ins!(1, 1, And, Op::Reg(Reg::A), Op::Reg(Reg::A));
    a[0xA8] = ins!(1, 1, Xor, Op::Reg(Reg::A), Op::Reg(Reg::B));
    a[0xA9] = ins!(1, 1, Xor, Op::Reg(Reg::A), Op::Reg(Reg::C));
    a[0xAA] = ins!(1, 1, Xor, Op::Reg(Reg::A), Op::Reg(Reg::D));
    a[0xAB] = ins!(1, 1, Xor, Op::Reg(Reg::A), Op::Reg(Reg::E));
    a[0xAC] = ins!(1, 1, Xor, Op::Reg(Reg::A), Op::Reg(Reg::H));
    a[0xAD] = ins!(1, 1, Xor, Op::Reg(Reg::A), Op::Reg(Reg::L));
    a[0xAE] = ins!(2, 2, Xor, Op::Reg(Reg::A), Op::RegMem(Reg::HL));
    a[0xAF] = ins!(1, 1, Xor, Op::Reg(Reg::A), Op::Reg(Reg::A));
    a[0xB0] = ins!(1, 1, Or, Op::Reg(Reg::A), Op::Reg(Reg::B));
    a[0xB1] = ins!(1, 1, Or, Op::Reg(Reg::A), Op::Reg(Reg::C));
    a[0xB2] = ins!(1, 1, Or, Op::Reg(Reg::A), Op::Reg(Reg::D));
    a[0xB3] = ins!(1, 1, Or, Op::Reg(Reg::A), Op::Reg(Reg::E));
    a[0xB4] = ins!(1, 1, Or, Op::Reg(Reg::A), Op::Reg(Reg::H));
    a[0xB5] = ins!(1, 1, Or, Op::Reg(Reg::A), Op::Reg(Reg::L));
    a[0xB6] = ins!(2, 2, Or, Op::Reg(Reg::A), Op::RegMem(Reg::HL));
    a[0xB7] = ins!(1, 1, Or, Op::Reg(Reg::A), Op::Reg(Reg::A));
    a[0xB8] = ins!(1, 1, Cp, Op::Reg(Reg::A), Op::Reg(Reg::B));
    a[0xB9] = ins!(1, 1, Cp, Op::Reg(Reg::A), Op::Reg(Reg::C));
    a[0xBA] = ins!(1, 1, Cp, Op::Reg(Reg::A), Op::Reg(Reg::D));
    a[0xBB] = ins!(1, 1, Cp, Op::Reg(Reg::A), Op::Reg(Reg::E));
    a[0xBC] = ins!(1, 1, Cp, Op::Reg(Reg::A), Op::Reg(Reg::H));
    a[0xBD] = ins!(1, 1, Cp, Op::Reg(Reg::A), Op::Reg(Reg::L));
    a[0xBE] = ins!(2, 2, Cp, Op::Reg(Reg::A), Op::RegMem(Reg::HL));
    a[0xBF] = ins!(1, 1, Cp, Op::Reg(Reg::A), Op::Reg(Reg::A));
    a[0xC0] = ins!(5, 2, Ret, Op::Cond(Cond::NZ));
    a[0xC1] = ins!(3, 3, Pop, Op::Reg(Reg::BC));
    a[0xC2] = ins!(4, 3, Jp, Op::Cond(Cond::NZ), Op::U16(0));
    a[0xC3] = ins!(4, 4, Jp, Op::U16(0));
    a[0xC4] = ins!(6, 3, Call, Op::Cond(Cond::NZ), Op::U16(0));
    a[0xC5] = ins!(4, 4, Push, Op::Reg(Reg::BC));
    a[0xC6] = ins!(2, 2, Add, Op::Reg(Reg::A), Op::U8(0));
    a[0xC7] = ins!(4, 4, Rst, Op::Tgt(0x00));
    a[0xC8] = ins!(5, 2, Ret, Op::Cond(Cond::Z));
    a[0xC9] = ins!(4, 4, Ret);
    a[0xCA] = ins!(4, 3, Jp, Op::Cond(Cond::Z), Op::U16(0));
    a[0xCB] = ins!(1, 1, Prefix);
    a[0xCC] = ins!(6, 3, Call, Op::Cond(Cond::Z), Op::U16(0));
    a[0xCD] = ins!(6, 6, Call, Op::U16(0));
    a[0xCE] = ins!(2, 2, Adc, Op::Reg(Reg::A), Op::U8(0));
    a[0xCF] = ins!(4, 4, Rst, Op::Tgt(0x08));
    a[0xD0] = ins!(5, 2, Ret, Op::Cond(Cond::NC));
    a[0xD1] = ins!(3, 3, Pop, Op::Reg(Reg::DE));
    a[0xD2] = ins!(4, 3, Jp, Op::Cond(Cond::NC), Op::U16(0));
    a[0xD3] = ins!(1, 1, Illegal);
    a[0xD4] = ins!(6, 3, Call, Op::Cond(Cond::NC), Op::U16(0));
    a[0xD5] = ins!(4, 4, Push, Op::Reg(Reg::DE));
    a[0xD6] = ins!(2, 2, Sub, Op::Reg(Reg::A), Op::U8(0));
    a[0xD7] = ins!(4, 4, Rst, Op::Tgt(0x10));
    a[0xD8] = ins!(5, 2, Ret, Op::Cond(Cond::C));
    a[0xD9] = ins!(4, 4, Reti);
    a[0xDA] = ins!(4, 3, Jp, Op::Cond(Cond::C), Op::U16(0));
    a[0xDB] = ins!(1, 1, Illegal);
    a[0xDC] = ins!(6, 3, Call, Op::Cond(Cond::C), Op::U16(0));
    a[0xDD] = ins!(1, 1, Illegal);
    a[0xDE] = ins!(2, 2, Sbc, Op::Reg(Reg::A), Op::U8(0));
    a[0xDF] = ins!(4, 4, Rst, Op::Tgt(0x18));
    a[0xE0] = ins!(3, 3, Ldh, Op::A8(0), Op::Reg(Reg::A));
    a[0xE1] = ins!(3, 3, Pop, Op::Reg(Reg::HL));
    a[0xE2] = ins!(2, 2, Ld, Op::RegMem(Reg::C), Op::Reg(Reg::A));
    a[0xE3] = ins!(1, 1, Illegal);
    a[0xE4] = ins!(1, 1, Illegal);
    a[0xE5] = ins!(4, 4, Push, Op::Reg(Reg::HL));
    a[0xE6] = ins!(2, 2, And, Op::Reg(Reg::A), Op::U8(0));
    a[0xE7] = ins!(4, 4, Rst, Op::Tgt(0x20));
    a[0xE8] = ins!(4, 4, Add, Op::Reg(Reg::SP), Op::I8(0));
    a[0xE9] = ins!(1, 1, Jp, Op::Reg(Reg::HL));
    a[0xEA] = ins!(4, 4, Ld, Op::A16(0), Op::Reg(Reg::A));
    a[0xEB] = ins!(1, 1, Illegal);
    a[0xEC] = ins!(1, 1, Illegal);
    a[0xED] = ins!(1, 1, Illegal);
    a[0xEE] = ins!(2, 2, Xor, Op::Reg(Reg::A), Op::U8(0));
    a[0xEF] = ins!(4, 4, Rst, Op::Tgt(0x28));
    a[0xF0] = ins!(3, 3, Ldh, Op::Reg(Reg::A), Op::A8(0));
    a[0xF1] = ins!(3, 3, Pop, Op::Reg(Reg::AF));
    a[0xF2] = ins!(2, 2, Ld, Op::Reg(Reg::A), Op::RegMem(Reg::C));
    a[0xF3] = ins!(1, 1, Di);
    a[0xF4] = ins!(1, 1, Illegal);
    a[0xF5] = ins!(4, 4, Push, Op::Reg(Reg::AF));
    a[0xF6] = ins!(2, 2, Or, Op::Reg(Reg::A), Op::U8(0));
    a[0xF7] = ins!(4, 4, Rst, Op::Tgt(0x30));
    a[0xF8] = ins!(3, 3, Ld, Op::Reg(Reg::HL), Op::SPplusI8(0));
    a[0xF9] = ins!(2, 2, Ld, Op::Reg(Reg::SP), Op::Reg(Reg::HL));
    a[0xFA] = ins!(4, 4, Ld, Op::Reg(Reg::A), Op::A16(0));
    a[0xFB] = ins!(1, 1, Ei);
    a[0xFC] = ins!(1, 1, Illegal);
    a[0xFD] = ins!(1, 1, Illegal);
    a[0xFE] = ins!(2, 2, Cp, Op::Reg(Reg::A), Op::U8(0));
    a[0xFF] = ins!(4, 4, Rst, Op::Tgt(0x38));

    a
};

// Generated by: gen/genins.py
pub(crate) const PREF_INSTR_TABLE: [Instr; 256] = {
    let mut a = [ins!(0, 0, Illegal); 256];
    a[0x00] = ins!(2, 2, Rlc, Op::Reg(Reg::B));
    a[0x01] = ins!(2, 2, Rlc, Op::Reg(Reg::C));
    a[0x02] = ins!(2, 2, Rlc, Op::Reg(Reg::D));
    a[0x03] = ins!(2, 2, Rlc, Op::Reg(Reg::E));
    a[0x04] = ins!(2, 2, Rlc, Op::Reg(Reg::H));
    a[0x05] = ins!(2, 2, Rlc, Op::Reg(Reg::L));
    a[0x06] = ins!(4, 4, Rlc, Op::RegMem(Reg::HL));
    a[0x07] = ins!(2, 2, Rlc, Op::Reg(Reg::A));
    a[0x08] = ins!(2, 2, Rrc, Op::Reg(Reg::B));
    a[0x09] = ins!(2, 2, Rrc, Op::Reg(Reg::C));
    a[0x0A] = ins!(2, 2, Rrc, Op::Reg(Reg::D));
    a[0x0B] = ins!(2, 2, Rrc, Op::Reg(Reg::E));
    a[0x0C] = ins!(2, 2, Rrc, Op::Reg(Reg::H));
    a[0x0D] = ins!(2, 2, Rrc, Op::Reg(Reg::L));
    a[0x0E] = ins!(4, 4, Rrc, Op::RegMem(Reg::HL));
    a[0x0F] = ins!(2, 2, Rrc, Op::Reg(Reg::A));
    a[0x10] = ins!(2, 2, Rl, Op::Reg(Reg::B));
    a[0x11] = ins!(2, 2, Rl, Op::Reg(Reg::C));
    a[0x12] = ins!(2, 2, Rl, Op::Reg(Reg::D));
    a[0x13] = ins!(2, 2, Rl, Op::Reg(Reg::E));
    a[0x14] = ins!(2, 2, Rl, Op::Reg(Reg::H));
    a[0x15] = ins!(2, 2, Rl, Op::Reg(Reg::L));
    a[0x16] = ins!(4, 4, Rl, Op::RegMem(Reg::HL));
    a[0x17] = ins!(2, 2, Rl, Op::Reg(Reg::A));
    a[0x18] = ins!(2, 2, Rr, Op::Reg(Reg::B));
    a[0x19] = ins!(2, 2, Rr, Op::Reg(Reg::C));
    a[0x1A] = ins!(2, 2, Rr, Op::Reg(Reg::D));
    a[0x1B] = ins!(2, 2, Rr, Op::Reg(Reg::E));
    a[0x1C] = ins!(2, 2, Rr, Op::Reg(Reg::H));
    a[0x1D] = ins!(2, 2, Rr, Op::Reg(Reg::L));
    a[0x1E] = ins!(4, 4, Rr, Op::RegMem(Reg::HL));
    a[0x1F] = ins!(2, 2, Rr, Op::Reg(Reg::A));
    a[0x20] = ins!(2, 2, Sla, Op::Reg(Reg::B));
    a[0x21] = ins!(2, 2, Sla, Op::Reg(Reg::C));
    a[0x22] = ins!(2, 2, Sla, Op::Reg(Reg::D));
    a[0x23] = ins!(2, 2, Sla, Op::Reg(Reg::E));
    a[0x24] = ins!(2, 2, Sla, Op::Reg(Reg::H));
    a[0x25] = ins!(2, 2, Sla, Op::Reg(Reg::L));
    a[0x26] = ins!(4, 4, Sla, Op::RegMem(Reg::HL));
    a[0x27] = ins!(2, 2, Sla, Op::Reg(Reg::A));
    a[0x28] = ins!(2, 2, Sra, Op::Reg(Reg::B));
    a[0x29] = ins!(2, 2, Sra, Op::Reg(Reg::C));
    a[0x2A] = ins!(2, 2, Sra, Op::Reg(Reg::D));
    a[0x2B] = ins!(2, 2, Sra, Op::Reg(Reg::E));
    a[0x2C] = ins!(2, 2, Sra, Op::Reg(Reg::H));
    a[0x2D] = ins!(2, 2, Sra, Op::Reg(Reg::L));
    a[0x2E] = ins!(4, 4, Sra, Op::RegMem(Reg::HL));
    a[0x2F] = ins!(2, 2, Sra, Op::Reg(Reg::A));
    a[0x30] = ins!(2, 2, Swap, Op::Reg(Reg::B));
    a[0x31] = ins!(2, 2, Swap, Op::Reg(Reg::C));
    a[0x32] = ins!(2, 2, Swap, Op::Reg(Reg::D));
    a[0x33] = ins!(2, 2, Swap, Op::Reg(Reg::E));
    a[0x34] = ins!(2, 2, Swap, Op::Reg(Reg::H));
    a[0x35] = ins!(2, 2, Swap, Op::Reg(Reg::L));
    a[0x36] = ins!(4, 4, Swap, Op::RegMem(Reg::HL));
    a[0x37] = ins!(2, 2, Swap, Op::Reg(Reg::A));
    a[0x38] = ins!(2, 2, Srl, Op::Reg(Reg::B));
    a[0x39] = ins!(2, 2, Srl, Op::Reg(Reg::C));
    a[0x3A] = ins!(2, 2, Srl, Op::Reg(Reg::D));
    a[0x3B] = ins!(2, 2, Srl, Op::Reg(Reg::E));
    a[0x3C] = ins!(2, 2, Srl, Op::Reg(Reg::H));
    a[0x3D] = ins!(2, 2, Srl, Op::Reg(Reg::L));
    a[0x3E] = ins!(4, 4, Srl, Op::RegMem(Reg::HL));
    a[0x3F] = ins!(2, 2, Srl, Op::Reg(Reg::A));
    a[0x40] = ins!(2, 2, Bit, Op::B3(0), Op::Reg(Reg::B));
    a[0x41] = ins!(2, 2, Bit, Op::B3(0), Op::Reg(Reg::C));
    a[0x42] = ins!(2, 2, Bit, Op::B3(0), Op::Reg(Reg::D));
    a[0x43] = ins!(2, 2, Bit, Op::B3(0), Op::Reg(Reg::E));
    a[0x44] = ins!(2, 2, Bit, Op::B3(0), Op::Reg(Reg::H));
    a[0x45] = ins!(2, 2, Bit, Op::B3(0), Op::Reg(Reg::L));
    a[0x46] = ins!(3, 3, Bit, Op::B3(0), Op::RegMem(Reg::HL));
    a[0x47] = ins!(2, 2, Bit, Op::B3(0), Op::Reg(Reg::A));
    a[0x48] = ins!(2, 2, Bit, Op::B3(1), Op::Reg(Reg::B));
    a[0x49] = ins!(2, 2, Bit, Op::B3(1), Op::Reg(Reg::C));
    a[0x4A] = ins!(2, 2, Bit, Op::B3(1), Op::Reg(Reg::D));
    a[0x4B] = ins!(2, 2, Bit, Op::B3(1), Op::Reg(Reg::E));
    a[0x4C] = ins!(2, 2, Bit, Op::B3(1), Op::Reg(Reg::H));
    a[0x4D] = ins!(2, 2, Bit, Op::B3(1), Op::Reg(Reg::L));
    a[0x4E] = ins!(3, 3, Bit, Op::B3(1), Op::RegMem(Reg::HL));
    a[0x4F] = ins!(2, 2, Bit, Op::B3(1), Op::Reg(Reg::A));
    a[0x50] = ins!(2, 2, Bit, Op::B3(2), Op::Reg(Reg::B));
    a[0x51] = ins!(2, 2, Bit, Op::B3(2), Op::Reg(Reg::C));
    a[0x52] = ins!(2, 2, Bit, Op::B3(2), Op::Reg(Reg::D));
    a[0x53] = ins!(2, 2, Bit, Op::B3(2), Op::Reg(Reg::E));
    a[0x54] = ins!(2, 2, Bit, Op::B3(2), Op::Reg(Reg::H));
    a[0x55] = ins!(2, 2, Bit, Op::B3(2), Op::Reg(Reg::L));
    a[0x56] = ins!(3, 3, Bit, Op::B3(2), Op::RegMem(Reg::HL));
    a[0x57] = ins!(2, 2, Bit, Op::B3(2), Op::Reg(Reg::A));
    a[0x58] = ins!(2, 2, Bit, Op::B3(3), Op::Reg(Reg::B));
    a[0x59] = ins!(2, 2, Bit, Op::B3(3), Op::Reg(Reg::C));
    a[0x5A] = ins!(2, 2, Bit, Op::B3(3), Op::Reg(Reg::D));
    a[0x5B] = ins!(2, 2, Bit, Op::B3(3), Op::Reg(Reg::E));
    a[0x5C] = ins!(2, 2, Bit, Op::B3(3), Op::Reg(Reg::H));
    a[0x5D] = ins!(2, 2, Bit, Op::B3(3), Op::Reg(Reg::L));
    a[0x5E] = ins!(3, 3, Bit, Op::B3(3), Op::RegMem(Reg::HL));
    a[0x5F] = ins!(2, 2, Bit, Op::B3(3), Op::Reg(Reg::A));
    a[0x60] = ins!(2, 2, Bit, Op::B3(4), Op::Reg(Reg::B));
    a[0x61] = ins!(2, 2, Bit, Op::B3(4), Op::Reg(Reg::C));
    a[0x62] = ins!(2, 2, Bit, Op::B3(4), Op::Reg(Reg::D));
    a[0x63] = ins!(2, 2, Bit, Op::B3(4), Op::Reg(Reg::E));
    a[0x64] = ins!(2, 2, Bit, Op::B3(4), Op::Reg(Reg::H));
    a[0x65] = ins!(2, 2, Bit, Op::B3(4), Op::Reg(Reg::L));
    a[0x66] = ins!(3, 3, Bit, Op::B3(4), Op::RegMem(Reg::HL));
    a[0x67] = ins!(2, 2, Bit, Op::B3(4), Op::Reg(Reg::A));
    a[0x68] = ins!(2, 2, Bit, Op::B3(5), Op::Reg(Reg::B));
    a[0x69] = ins!(2, 2, Bit, Op::B3(5), Op::Reg(Reg::C));
    a[0x6A] = ins!(2, 2, Bit, Op::B3(5), Op::Reg(Reg::D));
    a[0x6B] = ins!(2, 2, Bit, Op::B3(5), Op::Reg(Reg::E));
    a[0x6C] = ins!(2, 2, Bit, Op::B3(5), Op::Reg(Reg::H));
    a[0x6D] = ins!(2, 2, Bit, Op::B3(5), Op::Reg(Reg::L));
    a[0x6E] = ins!(3, 3, Bit, Op::B3(5), Op::RegMem(Reg::HL));
    a[0x6F] = ins!(2, 2, Bit, Op::B3(5), Op::Reg(Reg::A));
    a[0x70] = ins!(2, 2, Bit, Op::B3(6), Op::Reg(Reg::B));
    a[0x71] = ins!(2, 2, Bit, Op::B3(6), Op::Reg(Reg::C));
    a[0x72] = ins!(2, 2, Bit, Op::B3(6), Op::Reg(Reg::D));
    a[0x73] = ins!(2, 2, Bit, Op::B3(6), Op::Reg(Reg::E));
    a[0x74] = ins!(2, 2, Bit, Op::B3(6), Op::Reg(Reg::H));
    a[0x75] = ins!(2, 2, Bit, Op::B3(6), Op::Reg(Reg::L));
    a[0x76] = ins!(3, 3, Bit, Op::B3(6), Op::RegMem(Reg::HL));
    a[0x77] = ins!(2, 2, Bit, Op::B3(6), Op::Reg(Reg::A));
    a[0x78] = ins!(2, 2, Bit, Op::B3(7), Op::Reg(Reg::B));
    a[0x79] = ins!(2, 2, Bit, Op::B3(7), Op::Reg(Reg::C));
    a[0x7A] = ins!(2, 2, Bit, Op::B3(7), Op::Reg(Reg::D));
    a[0x7B] = ins!(2, 2, Bit, Op::B3(7), Op::Reg(Reg::E));
    a[0x7C] = ins!(2, 2, Bit, Op::B3(7), Op::Reg(Reg::H));
    a[0x7D] = ins!(2, 2, Bit, Op::B3(7), Op::Reg(Reg::L));
    a[0x7E] = ins!(3, 3, Bit, Op::B3(7), Op::RegMem(Reg::HL));
    a[0x7F] = ins!(2, 2, Bit, Op::B3(7), Op::Reg(Reg::A));
    a[0x80] = ins!(2, 2, Res, Op::B3(0), Op::Reg(Reg::B));
    a[0x81] = ins!(2, 2, Res, Op::B3(0), Op::Reg(Reg::C));
    a[0x82] = ins!(2, 2, Res, Op::B3(0), Op::Reg(Reg::D));
    a[0x83] = ins!(2, 2, Res, Op::B3(0), Op::Reg(Reg::E));
    a[0x84] = ins!(2, 2, Res, Op::B3(0), Op::Reg(Reg::H));
    a[0x85] = ins!(2, 2, Res, Op::B3(0), Op::Reg(Reg::L));
    a[0x86] = ins!(4, 4, Res, Op::B3(0), Op::RegMem(Reg::HL));
    a[0x87] = ins!(2, 2, Res, Op::B3(0), Op::Reg(Reg::A));
    a[0x88] = ins!(2, 2, Res, Op::B3(1), Op::Reg(Reg::B));
    a[0x89] = ins!(2, 2, Res, Op::B3(1), Op::Reg(Reg::C));
    a[0x8A] = ins!(2, 2, Res, Op::B3(1), Op::Reg(Reg::D));
    a[0x8B] = ins!(2, 2, Res, Op::B3(1), Op::Reg(Reg::E));
    a[0x8C] = ins!(2, 2, Res, Op::B3(1), Op::Reg(Reg::H));
    a[0x8D] = ins!(2, 2, Res, Op::B3(1), Op::Reg(Reg::L));
    a[0x8E] = ins!(4, 4, Res, Op::B3(1), Op::RegMem(Reg::HL));
    a[0x8F] = ins!(2, 2, Res, Op::B3(1), Op::Reg(Reg::A));
    a[0x90] = ins!(2, 2, Res, Op::B3(2), Op::Reg(Reg::B));
    a[0x91] = ins!(2, 2, Res, Op::B3(2), Op::Reg(Reg::C));
    a[0x92] = ins!(2, 2, Res, Op::B3(2), Op::Reg(Reg::D));
    a[0x93] = ins!(2, 2, Res, Op::B3(2), Op::Reg(Reg::E));
    a[0x94] = ins!(2, 2, Res, Op::B3(2), Op::Reg(Reg::H));
    a[0x95] = ins!(2, 2, Res, Op::B3(2), Op::Reg(Reg::L));
    a[0x96] = ins!(4, 4, Res, Op::B3(2), Op::RegMem(Reg::HL));
    a[0x97] = ins!(2, 2, Res, Op::B3(2), Op::Reg(Reg::A));
    a[0x98] = ins!(2, 2, Res, Op::B3(3), Op::Reg(Reg::B));
    a[0x99] = ins!(2, 2, Res, Op::B3(3), Op::Reg(Reg::C));
    a[0x9A] = ins!(2, 2, Res, Op::B3(3), Op::Reg(Reg::D));
    a[0x9B] = ins!(2, 2, Res, Op::B3(3), Op::Reg(Reg::E));
    a[0x9C] = ins!(2, 2, Res, Op::B3(3), Op::Reg(Reg::H));
    a[0x9D] = ins!(2, 2, Res, Op::B3(3), Op::Reg(Reg::L));
    a[0x9E] = ins!(4, 4, Res, Op::B3(3), Op::RegMem(Reg::HL));
    a[0x9F] = ins!(2, 2, Res, Op::B3(3), Op::Reg(Reg::A));
    a[0xA0] = ins!(2, 2, Res, Op::B3(4), Op::Reg(Reg::B));
    a[0xA1] = ins!(2, 2, Res, Op::B3(4), Op::Reg(Reg::C));
    a[0xA2] = ins!(2, 2, Res, Op::B3(4), Op::Reg(Reg::D));
    a[0xA3] = ins!(2, 2, Res, Op::B3(4), Op::Reg(Reg::E));
    a[0xA4] = ins!(2, 2, Res, Op::B3(4), Op::Reg(Reg::H));
    a[0xA5] = ins!(2, 2, Res, Op::B3(4), Op::Reg(Reg::L));
    a[0xA6] = ins!(4, 4, Res, Op::B3(4), Op::RegMem(Reg::HL));
    a[0xA7] = ins!(2, 2, Res, Op::B3(4), Op::Reg(Reg::A));
    a[0xA8] = ins!(2, 2, Res, Op::B3(5), Op::Reg(Reg::B));
    a[0xA9] = ins!(2, 2, Res, Op::B3(5), Op::Reg(Reg::C));
    a[0xAA] = ins!(2, 2, Res, Op::B3(5), Op::Reg(Reg::D));
    a[0xAB] = ins!(2, 2, Res, Op::B3(5), Op::Reg(Reg::E));
    a[0xAC] = ins!(2, 2, Res, Op::B3(5), Op::Reg(Reg::H));
    a[0xAD] = ins!(2, 2, Res, Op::B3(5), Op::Reg(Reg::L));
    a[0xAE] = ins!(4, 4, Res, Op::B3(5), Op::RegMem(Reg::HL));
    a[0xAF] = ins!(2, 2, Res, Op::B3(5), Op::Reg(Reg::A));
    a[0xB0] = ins!(2, 2, Res, Op::B3(6), Op::Reg(Reg::B));
    a[0xB1] = ins!(2, 2, Res, Op::B3(6), Op::Reg(Reg::C));
    a[0xB2] = ins!(2, 2, Res, Op::B3(6), Op::Reg(Reg::D));
    a[0xB3] = ins!(2, 2, Res, Op::B3(6), Op::Reg(Reg::E));
    a[0xB4] = ins!(2, 2, Res, Op::B3(6), Op::Reg(Reg::H));
    a[0xB5] = ins!(2, 2, Res, Op::B3(6), Op::Reg(Reg::L));
    a[0xB6] = ins!(4, 4, Res, Op::B3(6), Op::RegMem(Reg::HL));
    a[0xB7] = ins!(2, 2, Res, Op::B3(6), Op::Reg(Reg::A));
    a[0xB8] = ins!(2, 2, Res, Op::B3(7), Op::Reg(Reg::B));
    a[0xB9] = ins!(2, 2, Res, Op::B3(7), Op::Reg(Reg::C));
    a[0xBA] = ins!(2, 2, Res, Op::B3(7), Op::Reg(Reg::D));
    a[0xBB] = ins!(2, 2, Res, Op::B3(7), Op::Reg(Reg::E));
    a[0xBC] = ins!(2, 2, Res, Op::B3(7), Op::Reg(Reg::H));
    a[0xBD] = ins!(2, 2, Res, Op::B3(7), Op::Reg(Reg::L));
    a[0xBE] = ins!(4, 4, Res, Op::B3(7), Op::RegMem(Reg::HL));
    a[0xBF] = ins!(2, 2, Res, Op::B3(7), Op::Reg(Reg::A));
    a[0xC0] = ins!(2, 2, Set, Op::B3(0), Op::Reg(Reg::B));
    a[0xC1] = ins!(2, 2, Set, Op::B3(0), Op::Reg(Reg::C));
    a[0xC2] = ins!(2, 2, Set, Op::B3(0), Op::Reg(Reg::D));
    a[0xC3] = ins!(2, 2, Set, Op::B3(0), Op::Reg(Reg::E));
    a[0xC4] = ins!(2, 2, Set, Op::B3(0), Op::Reg(Reg::H));
    a[0xC5] = ins!(2, 2, Set, Op::B3(0), Op::Reg(Reg::L));
    a[0xC6] = ins!(4, 4, Set, Op::B3(0), Op::RegMem(Reg::HL));
    a[0xC7] = ins!(2, 2, Set, Op::B3(0), Op::Reg(Reg::A));
    a[0xC8] = ins!(2, 2, Set, Op::B3(1), Op::Reg(Reg::B));
    a[0xC9] = ins!(2, 2, Set, Op::B3(1), Op::Reg(Reg::C));
    a[0xCA] = ins!(2, 2, Set, Op::B3(1), Op::Reg(Reg::D));
    a[0xCB] = ins!(2, 2, Set, Op::B3(1), Op::Reg(Reg::E));
    a[0xCC] = ins!(2, 2, Set, Op::B3(1), Op::Reg(Reg::H));
    a[0xCD] = ins!(2, 2, Set, Op::B3(1), Op::Reg(Reg::L));
    a[0xCE] = ins!(4, 4, Set, Op::B3(1), Op::RegMem(Reg::HL));
    a[0xCF] = ins!(2, 2, Set, Op::B3(1), Op::Reg(Reg::A));
    a[0xD0] = ins!(2, 2, Set, Op::B3(2), Op::Reg(Reg::B));
    a[0xD1] = ins!(2, 2, Set, Op::B3(2), Op::Reg(Reg::C));
    a[0xD2] = ins!(2, 2, Set, Op::B3(2), Op::Reg(Reg::D));
    a[0xD3] = ins!(2, 2, Set, Op::B3(2), Op::Reg(Reg::E));
    a[0xD4] = ins!(2, 2, Set, Op::B3(2), Op::Reg(Reg::H));
    a[0xD5] = ins!(2, 2, Set, Op::B3(2), Op::Reg(Reg::L));
    a[0xD6] = ins!(4, 4, Set, Op::B3(2), Op::RegMem(Reg::HL));
    a[0xD7] = ins!(2, 2, Set, Op::B3(2), Op::Reg(Reg::A));
    a[0xD8] = ins!(2, 2, Set, Op::B3(3), Op::Reg(Reg::B));
    a[0xD9] = ins!(2, 2, Set, Op::B3(3), Op::Reg(Reg::C));
    a[0xDA] = ins!(2, 2, Set, Op::B3(3), Op::Reg(Reg::D));
    a[0xDB] = ins!(2, 2, Set, Op::B3(3), Op::Reg(Reg::E));
    a[0xDC] = ins!(2, 2, Set, Op::B3(3), Op::Reg(Reg::H));
    a[0xDD] = ins!(2, 2, Set, Op::B3(3), Op::Reg(Reg::L));
    a[0xDE] = ins!(4, 4, Set, Op::B3(3), Op::RegMem(Reg::HL));
    a[0xDF] = ins!(2, 2, Set, Op::B3(3), Op::Reg(Reg::A));
    a[0xE0] = ins!(2, 2, Set, Op::B3(4), Op::Reg(Reg::B));
    a[0xE1] = ins!(2, 2, Set, Op::B3(4), Op::Reg(Reg::C));
    a[0xE2] = ins!(2, 2, Set, Op::B3(4), Op::Reg(Reg::D));
    a[0xE3] = ins!(2, 2, Set, Op::B3(4), Op::Reg(Reg::E));
    a[0xE4] = ins!(2, 2, Set, Op::B3(4), Op::Reg(Reg::H));
    a[0xE5] = ins!(2, 2, Set, Op::B3(4), Op::Reg(Reg::L));
    a[0xE6] = ins!(4, 4, Set, Op::B3(4), Op::RegMem(Reg::HL));
    a[0xE7] = ins!(2, 2, Set, Op::B3(4), Op::Reg(Reg::A));
    a[0xE8] = ins!(2, 2, Set, Op::B3(5), Op::Reg(Reg::B));
    a[0xE9] = ins!(2, 2, Set, Op::B3(5), Op::Reg(Reg::C));
    a[0xEA] = ins!(2, 2, Set, Op::B3(5), Op::Reg(Reg::D));
    a[0xEB] = ins!(2, 2, Set, Op::B3(5), Op::Reg(Reg::E));
    a[0xEC] = ins!(2, 2, Set, Op::B3(5), Op::Reg(Reg::H));
    a[0xED] = ins!(2, 2, Set, Op::B3(5), Op::Reg(Reg::L));
    a[0xEE] = ins!(4, 4, Set, Op::B3(5), Op::RegMem(Reg::HL));
    a[0xEF] = ins!(2, 2, Set, Op::B3(5), Op::Reg(Reg::A));
    a[0xF0] = ins!(2, 2, Set, Op::B3(6), Op::Reg(Reg::B));
    a[0xF1] = ins!(2, 2, Set, Op::B3(6), Op::Reg(Reg::C));
    a[0xF2] = ins!(2, 2, Set, Op::B3(6), Op::Reg(Reg::D));
    a[0xF3] = ins!(2, 2, Set, Op::B3(6), Op::Reg(Reg::E));
    a[0xF4] = ins!(2, 2, Set, Op::B3(6), Op::Reg(Reg::H));
    a[0xF5] = ins!(2, 2, Set, Op::B3(6), Op::Reg(Reg::L));
    a[0xF6] = ins!(4, 4, Set, Op::B3(6), Op::RegMem(Reg::HL));
    a[0xF7] = ins!(2, 2, Set, Op::B3(6), Op::Reg(Reg::A));
    a[0xF8] = ins!(2, 2, Set, Op::B3(7), Op::Reg(Reg::B));
    a[0xF9] = ins!(2, 2, Set, Op::B3(7), Op::Reg(Reg::C));
    a[0xFA] = ins!(2, 2, Set, Op::B3(7), Op::Reg(Reg::D));
    a[0xFB] = ins!(2, 2, Set, Op::B3(7), Op::Reg(Reg::E));
    a[0xFC] = ins!(2, 2, Set, Op::B3(7), Op::Reg(Reg::H));
    a[0xFD] = ins!(2, 2, Set, Op::B3(7), Op::Reg(Reg::L));
    a[0xFE] = ins!(4, 4, Set, Op::B3(7), Op::RegMem(Reg::HL));
    a[0xFF] = ins!(2, 2, Set, Op::B3(7), Op::Reg(Reg::A));

    a
};
